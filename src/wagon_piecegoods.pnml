divert(-1)
/*
 * This file is part of OpenGFX+ Trains.
 * OpenGFX+ Trains is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenGFX+ Trains is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenGFX+ Trains. If not, see <http://www.gnu.org/licenses/>.
 */

# Perform a check to make sure the files have been included
ifelse(do_included_checks, [1],
    [check_included([src/templates_wagons.pnml])
     check_included([src/cargo_definitions.pnml])])

# Define the wagon name and check that it was previously undefined
define_unique([_THIS_WAGON], [piecegoods_wagon])

divert

/*
 * ***************************
 * Piece goods wagon:
 *
 * goods, food, paper, fruits, fruit + vegetables,
 * farm supplies, engineering supplies,
 * manufacturing supplies, wool
 * ***************************
 */

/* DEFAULT */
_WAGON_LOADING_LENGTH88(common, modern, default,
    "goods",
    "goods_loading",
    "src/gfx/temperate_railwagons.png",
    "src/gfx/temperate_railwagons.png",
    tmpl_railwagon42, 0, 125, 0, 125)

/* PAPER */
_WAGON_LOADING_LENGTH88(paper, modern, default,
    "goods",
    "goods_loading",
    "src/gfx/arctic_railwagons.png",
    "src/gfx/arctic_railwagons.png",
    tmpl_railwagon42, 0, 200, 0, 425)

/* FRUIT */
_WAGON_LOADING_LENGTH88(fruit, modern, default,
    "goods",
    "goods_loading",
    "src/gfx/arctic_railwagons.png",
    "src/gfx/arctic_railwagons.png",
    tmpl_railwagon42, 0, 400, 0, 400)

/* FOOD */
_WAGON_LOADING_LENGTH88(food, modern, default,
    "goods",
    "goods_loading",
    "src/gfx/arctic_railwagons.png",
    "src/gfx/arctic_railwagons.png",
    tmpl_railwagon42, 0, 400, 0, 400)

/* LIVESTOCK */
_WAGON_LOADING_LENGTH88(livestock, modern, default,
    "livestock",
    "livestock_loading",
    "src/gfx/temperate_railwagons.png",
    "src/gfx/temperate_railwagons.png",
    tmpl_railwagon42, 0, 100, 0, 100)

/* TOYLAND */
_WAGON_LOADING_LENGTH88(toyland, modern, default,
    "goods",
    "goods_loading",
    "src/gfx/toyland_railwagons.png",
    "src/gfx/toyland_railwagons.png",
    tmpl_short_railwagon42, 0, 260, 0, 280)

/* TOYS */
_WAGON_LOADING_LENGTH88(toys, modern, default,
    "goods",
    "goods_loading",
    "src/gfx/toyland_railwagons.png",
    "src/gfx/toyland_railwagons.png",
    tmpl_short_railwagon42, 0, 300, 0, 320)

switch(FEAT_TRAINS, SELF, _THIS_WAGON_CARGO_SWITCH_ID(default), cargo_type_in_veh) {
    BATT: _THIS_WAGON_GRAPHICS_ID(toyland, modern, default);
    FRUT: _THIS_WAGON_GRAPHICS_ID(fruit, modern, default);
    FRVG: _THIS_WAGON_GRAPHICS_ID(fruit, modern, default);
    FOOD: _THIS_WAGON_GRAPHICS_ID(food, modern, default);
    LVST: _THIS_WAGON_GRAPHICS_ID(livestock, modern, default);
    PAPR: _THIS_WAGON_GRAPHICS_ID(paper, modern, default);
    SWET: _THIS_WAGON_GRAPHICS_ID(toyland, modern, default);
    TOYS: _THIS_WAGON_GRAPHICS_ID(toys, modern, default);
    _THIS_WAGON_GRAPHICS_ID(common, modern, default);
}

define([_PIECEGOODS_WAGON_CAPACITY_SWITCH_ID], _THIS_WAGON_CARGO_SWITCH_ID(capacity))dnl
switch (FEAT_TRAINS, SELF, _THIS_WAGON_CARGO_SWITCH_ID(capacity), cargo_type_in_veh) {
    // default: 25 units
    FOOD: return 20;
    FRUT: return 20;
    FRVG: return 20;
    PAPR: return 20;
    TOYS: return 20;
    CB_FAILED;
}

define([_PIECEGOODS_WAGON_WEIGHT_SWITCH_ID], _THIS_WAGON_CARGO_SWITCH_ID(weight))dnl
switch (FEAT_TRAINS, SELF, _THIS_WAGON_CARGO_SWITCH_ID(weight), cargo_type_in_veh) {
    // default: 21 tons
    FOOD: return 22;
    FRUT: return 22;
    FRVG: return 22;
    MILK: return 22;
    PAPR: return 18;
    TOYS: return 21;
    CB_FAILED;
}

item(FEAT_TRAINS, _THIS_WAGON) {
    property {
        /* We try to simulate the stats of the temperate goods wagon */
include([src/template_wagon_properties_default.pnml])
include([src/template_wagon_properties_rail_default.pnml])
include([src/template_refit_properties_piece_goods.pnml])
        name:                           string(STR_NAME_COVERED_PIECE_GOODS_WAGON);
        cost_factor:                    190;
        cargo_capacity:                 25;
        weight:                         21 ton;
    }
    graphics {
        weight:         _THIS_WAGON_CARGO_SWITCH_ID(weight);
        cargo_capacity: _THIS_WAGON_CARGO_SWITCH_ID(capacity);
        refit_cost:     _PIECEGOODS_REFIT_COST_SWITCH;

        purchase:   _THIS_WAGON_GRAPHICS_ID(common, modern, default);
        _THIS_WAGON_CARGO_SWITCH_ID(default);
    }
}

undefine([_THIS_WAGON])dnl
