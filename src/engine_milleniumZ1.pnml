divert(-1)
/*
 * This file is part of OpenGFX+ Trains.
 * OpenGFX+ Trains is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenGFX+ Trains is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenGFX+ Trains. If not, see <http://www.gnu.org/licenses/>.
 */

# Perform a check to make sure the files have been included
ifelse(do_included_checks, [1],
    [check_included([src/templates_engines.pnml])
     check_included([src/railtype_table.pnml])
     check_included([src/monorail_pax.pnml])
     check_included([src/monorail_mail.pnml])
     check_included([src/monorail_valuables.pnml])])

# Define the engine name and check that it was previously undefined
define_unique([_THIS_ENGINE], [millenium_z1])

divert

/*
 * "'Millennium Z1' (Electric)"
 * Livery override for passenger, mail and valuables wagons
 */

/* DEFAULT ENGINE */
_ENGINE_LOADING_LENGTH88(engine, default,
    "millennium",
    "millennium_loading",
    "src/gfx/engines/monorail_millenium_88.png",
    "src/gfx/engines/monorail_millenium_88.png",
    tmpl_engine_88, 0, 0, 0, 0)

/* CARGO REFITTED ENGINE */
_ENGINE_LOADING_LENGTH88(engine_cargo, default,
    "millennium_cargo",
    "millennium_cargo_loading",
    "src/gfx/engines/monorail_millenium_88.png",
    "src/gfx/engines/monorail_millenium_88.png",
    tmpl_engine_88, 0, 0, 0, 0)

/* PASSENGER LIVERY */
_ENGINE_LIVERY_LOADING_LENGTH88(monorail_passenger_wagon, modern, default,
    "passenger_millennium",
    "passenger_millennium_loading",
    "src/gfx/temperate_monolev.png",
    "src/gfx/temperate_monolev.png",
    tmpl_short_railwagon242, 0, 0, 0, 0)

/* MAIL LIVERY */
_ENGINE_LIVERY_LOADING_LENGTH88(monorail_mail_wagon, modern, default,
    "mono_mail",
    "mono_mail_loading",
    "src/gfx/temperate_monolev.png",
    "src/gfx/temperate_monolev.png",
    tmpl_short_railwagon242, 0, 20, 0, 20)

/* VALUABLES LIVERY */
_ENGINE_LIVERY_LOADING_LENGTH88(monorail_valuables_wagon, modern, default,
    "mono_armoured",
    "mono_armoured_loading",
    "src/gfx/temperate_monolev.png",
    "src/gfx/temperate_monolev.png",
    tmpl_short_railwagon242, 0, 60, 0, 80)

/* CARGO GRAPHICS SWITCH */
switch (FEAT_TRAINS, SELF, _THIS_ENGINE_CARGO_SWITCH_ID(graphics), cargo_type_in_veh) {
    PASS: _THIS_ENGINE_GRAPHICS_ID(engine, default);
    TOUR: _THIS_ENGINE_GRAPHICS_ID(engine, default);
    _THIS_ENGINE_GRAPHICS_ID(engine_cargo, default);
}

item(FEAT_TRAINS, _THIS_ENGINE, 55) {
    property {
        sprite_id:              SPRITE_ID_NEW_TRAIN;    // We have our own sprite
        misc_flags:             bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_FLIP, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
        climates_available:     ((USE_CLIMATE_TEMPERATE || USE_CLIMATE_ARCTIC || USE_CLIMATE_TROPICAL || USE_CLIMATE_ALL || USE_CLIMATE_ALL_BUT_TOYLAND) && param_provide_monorail) ? bitmask(climate) : NO_CLIMATE;
        track_type:             MONORAIL;
include([src/template_refit_properties_mu.pnml])
        default_cargo_type:     _MU_DEFAULT_CARGO([PASS]);
    }
    graphics {
        refit_cost: _MU_REFIT_COST_SWITCH;

        _THIS_ENGINE_CARGO_SWITCH_ID(graphics);
    }
    livery_override (monorail_passenger_wagon) {
        _THIS_ENGINE_LIVERY_GRAPHICS_ID(monorail_passenger_wagon, modern, default);
    }
    livery_override (monorail_mail_wagon) {
        _THIS_ENGINE_LIVERY_GRAPHICS_ID(monorail_mail_wagon, modern, default);
    }
    livery_override (monorail_valuables_wagon) {
        _THIS_ENGINE_LIVERY_GRAPHICS_ID(monorail_valuables_wagon, modern, default);
    }
}

undefine([_THIS_ENGINE])dnl
