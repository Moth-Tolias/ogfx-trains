divert(-1)
/*
 * This file is part of OpenGFX+ Trains.
 * OpenGFX+ Trains is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenGFX+ Trains is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenGFX+ Trains. If not, see <http://www.gnu.org/licenses/>.
 */

# Perform a check to make sure the files have been included
ifelse(do_included_checks, [1],
    [check_included([src/templates_common.pnml])])

#############################################################################################
# _THIS_WAGON_ID (args...)
# Creates an identifier by joining _THIS_WAGON and the provided arguments with an
# underscore (_) character.
#############################################################################################
define_unique([_THIS_WAGON_ID],
    [check_defined([_THIS_WAGON])_THIS_ID(_THIS_WAGON, $@)])

#############################################################################################
# _THIS_WAGON_GRAPHICS_ID (name, climate)
# Creates a wagon graphics identifier that can be used as a unique graphics reference
# for template macros.
#############################################################################################
define_unique([_THIS_WAGON_GRAPHICS_ID],
    [check_args_exact([$0], [$#], [3])_THIS_WAGON_ID($@, graphics_switch)])

#############################################################################################
# _THIS_WAGON_CLIMATE_SWITCH_ID (name, climate)
# Creates an wagon climate switch identifier that can be used as a unique graphics reference
# for template macros.
#############################################################################################
define_unique([_THIS_WAGON_CLIMATE_SWITCH_ID],
    [check_args_exact([$0], [$#], [2])_THIS_WAGON_ID($@, climate_switch)])

#############################################################################################
# _THIS_WAGON_CARGO_SWITCH_ID (name, climate)
# Creates an wagon cargo switch identifier that can be used as a unique graphics reference
# for template macros.
#############################################################################################
define_unique([_THIS_WAGON_CARGO_SWITCH_ID],
    [check_args_exact([$0], [$#], [1])_THIS_WAGON_ID($@, cargo_switch)])

#############################################################################################
# _THIS_WAGON_RANDOM_SWITCH_ID (name, climate)
# Creates an wagon random switch identifier that can be used as a unique graphics reference
# for template macros.
#############################################################################################
define_unique([_THIS_WAGON_RANDOM_SWITCH_ID],
    [check_args_exact([$0], [$#], [1])_THIS_WAGON_ID($@, random_switch)])

#############################################################################################
# _THIS_WAGON_YEAR_SWITCH_ID (name, climate)
# Creates an wagon year switch identifier that can be used as a unique graphics reference
# for template macros.
#############################################################################################
define_unique([_THIS_WAGON_YEAR_SWITCH_ID],
    [check_args_exact([$0], [$#], [2])_THIS_WAGON_ID($@, year_switch)])

#############################################################################################
# _THIS_WAGON_SPEED_YEAR_SWITCH_ID (name, climate)
# Creates an wagon speed year switch identifier that can be used as a unique speed reference
# for template macros.
#############################################################################################
define_unique([_THIS_WAGON_SPEED_YEAR_SWITCH_ID],
    [check_args_exact([$0], [$#], [2])_THIS_WAGON_ID($@, speed_year_switch)])

#############################################################################################
# Wagon with
# - no loading stages
# - length 4/8
# [_WAGON_LENGTH48](
# 1 - name,
# 2 - type,
# 3 - climate,
# 4 - model,
# 5 - filename,
# 6 - templatename,
# 7 - x,
# 8 - y)
#############################################################################################
define_unique([_WAGON_LENGTH48], [check_args_exact([$0], [$#], [8])dnl
define_unique([_CNAME], [_THIS_WAGON_ID([$1], [$2], [$3])])dnl
_SPRITESET(_LENGTH_48, _CNAME_ID, $5, $6, $7, $8, $4)
_SWITCH_GUI(_CNAME_ID, _CNAME_ID(gui_set), _CNAME_ID(set), _CNAME_ID(gui_set))
_SWITCH_REFERENCE(_CNAME_ID, _CNAME_ID(gui_switch))
undefine([_CNAME])dnl])

#############################################################################################
# Wagon with
# - no loading stage
# - length 8/8
# [_WAGON_LENGTH88](
# 1 - name,
# 2 - type,
# 3 - climate,
# 4 - model,
# 5 - filename,
# 6 - templatename,
# 7 - x,
# 8 - y)
#############################################################################################
define_unique([_WAGON_LENGTH88], [check_args_exact([$0], [$#], [8])dnl
define_unique([_CNAME], [_THIS_WAGON_ID([$1], [$2], [$3])])dnl
_SPRITESET(_LENGTH_88, _CNAME_ID, $5, $6, $7, $8, $4)
_SWITCH_GUI(_CNAME_ID, _CNAME_ID(gui_set), _CNAME_ID(set), _CNAME_ID(gui_set))
_SWITCH_REFERENCE(_CNAME_ID, _CNAME_ID(gui_switch))
undefine([_CNAME])dnl])

#############################################################################################
# Wagon with
# - one loading stage
# - length 8/8
# [_ENGINE_LOADING_LENGTH88](
# 1  - name,
# 2  - type,
# 3  - climate,
# 4  - name_loaded,
# 5  - name_loading,
# 6  - file_loaded,
# 7  - file_loading,
# 8  - tmpl,
# 9  - x1,
# 10 - y1
# 11 - x2,
# 12 - y2)
#############################################################################################
define_unique([_WAGON_LOADING_LENGTH88], [check_args_exact([$0], [$#], [12])dnl
define_unique([_CNAME], [_THIS_WAGON_ID([$1], [$2], [$3])])dnl
_SPRITESET(_LENGTH_88, _CNAME_ID(loaded), $6, $8, $9, $10, $4)
_SPRITESET(_LENGTH_88, _CNAME_ID(loading), $7, $8, $11, $12, $5)
_SPRITEGROUP_LOADING(_CNAME_ID, _CNAME_ID(loaded_set), _CNAME_ID(loading_set))
_SPRITEGROUP_LOADING(_CNAME_ID(gui), _CNAME_ID(loaded_gui_set), _CNAME_ID(loading_gui_set))
_SWITCH_GUI(_CNAME_ID, _CNAME_ID(gui_group), _CNAME_ID(group), _CNAME_ID(loaded_gui_set))
_SWITCH_REFERENCE(_CNAME_ID, _CNAME_ID(gui_switch))
undefine([_CNAME])dnl])

#############################################################################################
# Wagon with
# - no loading stage
# - two cargo stages (empty + full)
# - length 8/8
# [_WAGON_2STAGES_NOLOADING_LENGTH88](
# 1  - name,
# 2  - type,
# 3  - climate,
# 4  - name_empty,
# 5  - name_full,
# 6  - file,
# 7  - file,
# 8  - tmpl,
# 9  - x1,
# 10 - y1,
# 11 - x2,
# 12 - y2)
# Note the use of quadrigraphs @<:@ and @:>@
#############################################################################################
define_unique([_WAGON_2STAGES_NOLOADING_LENGTH88], [check_args_exact([$0], [$#], [12])dnl
define_unique([_CNAME], [_THIS_WAGON_ID([$1], [$2], [$3])])dnl
_SPRITESET(_LENGTH_88, _CNAME_ID(empty), $6, $8, $9, $10, $4)
_SPRITESET(_LENGTH_88, _CNAME_ID(full), $7, $8, $11, $12, $5)
_SPRITEGROUP_NOLOADING(_CNAME_ID, [@<:@_CNAME_ID(empty_set), _CNAME_ID(full_set)@:>@])
_SPRITEGROUP_NOLOADING(_CNAME_ID(gui), [@<:@_CNAME_ID(empty_gui_set), _CNAME_ID(full_gui_set)@:>@])
_SWITCH_GUI(_CNAME_ID, _CNAME_ID(gui_group), _CNAME_ID(group), _CNAME_ID(empty_gui_set))
_SWITCH_REFERENCE(_CNAME_ID, _CNAME_ID(gui_switch))
undefine([_CNAME])dnl])

#############################################################################################
# Wagon with
# - no loading stage
# - three cargo stages (empty + 1/2 full + full)
# - length 8/8
# [_WAGON_3STAGES_NOLOADING_LENGTH88](
# 1  - name,
# 2  - type,
# 3  - climate,
# 4  - model_empty,
# 5  - model_12,
# 6  - model_22,
# 7  - file_empty,
# 8  - file_1,
# 9  - file_2,
# 10 - tmpl,
# 11 - x1,
# 12 - y1,
# 13 - x2,
# 14 - y2,
# 15 - x3,
# 16 - y3)
# Note the use of quadrigraphs @<:@ and @:>@
#############################################################################################
define_unique([_WAGON_3STAGES_NOLOADING_LENGTH88], [check_args_exact([$0], [$#], [16])dnl
define_unique([_CNAME], [_THIS_WAGON_ID([$1], [$2], [$3])])dnl
_SPRITESET(_LENGTH_88, _CNAME_ID(empty), $7, $10, $11, $12, $4)
_SPRITESET(_LENGTH_88, _CNAME_ID(full12), $8, $10, $13, $14, $5)
_SPRITESET(_LENGTH_88, _CNAME_ID(full22), $9, $10, $15, $16, $6)
_SPRITEGROUP_NOLOADING(_CNAME_ID, [@<:@_CNAME_ID(empty_set), _CNAME_ID(full12_set), _CNAME_ID(full22_set)@:>@])
_SPRITEGROUP_NOLOADING(_CNAME_ID(gui), [@<:@_CNAME_ID(empty_gui_set), _CNAME_ID(full12_gui_set), _CNAME_ID(full22_gui_set)@:>@])
_SWITCH_GUI(_CNAME_ID, _CNAME_ID(gui_group), _CNAME_ID(group), _CNAME_ID(empty_gui_set))
_SWITCH_REFERENCE(_CNAME_ID, _CNAME_ID(gui_switch))
undefine([_CNAME])dnl])

#############################################################################################
# Wagon with
# - no loading stage
# - four cargo stages (empty + 1/3 full + 2/3 full + full)
# - length 8/8
# [_WAGON_4STAGES_NOLOADING_LENGTH88](
# 1  - name,
# 2  - type,
# 3  - climate,
# 4  - model_empty,
# 5  - model_13,
# 6  - model_23,
# 7  - model_33,
# 8  - file_empty,
# 9  - file_1,
# 10 - file_2,
# 11 - file_3,
# 12 - tmpl,
# 13 - x1,
# 14 - y1,
# 15 - x2,
# 16 - y2,
# 17 - x3,
# 18 - y3,
# 19 - x4,
# 20 - y4)
# Note the use of quadrigraphs @<:@ and @:>@
#############################################################################################
define_unique([_WAGON_4STAGES_NOLOADING_LENGTH88], [check_args_exact([$0], [$#], [20])dnl
define_unique([_CNAME], [_THIS_WAGON_ID([$1], [$2], [$3])])dnl
_SPRITESET(_LENGTH_88, _CNAME_ID(empty), $8, $12, $13, $14, $4)
_SPRITESET(_LENGTH_88, _CNAME_ID(full13), $9, $12, $15, $16, $5)
_SPRITESET(_LENGTH_88, _CNAME_ID(full23), $10, $12, $17, $18, $6)
_SPRITESET(_LENGTH_88, _CNAME_ID(full33), $11, $12, $19, $20, $7)
_SPRITEGROUP_NOLOADING(_CNAME_ID, [@<:@_CNAME_ID(empty_set), _CNAME_ID(full13_set), _CNAME_ID(full23_set), _CNAME_ID(full33_set)@:>@])
_SPRITEGROUP_NOLOADING(_CNAME_ID(gui), [@<:@_CNAME_ID(empty_gui_set), _CNAME_ID(full13_gui_set), _CNAME_ID(full23_gui_set), _CNAME_ID(full33_gui_set)@:>@])
_SWITCH_GUI(_CNAME_ID, _CNAME_ID(gui_group), _CNAME_ID(group), _CNAME_ID(empty_gui_set))
_SWITCH_REFERENCE(_CNAME_ID, _CNAME_ID(gui_switch))
undefine([_CNAME])dnl])

#############################################################################################
# Wagon with
# - two time periods
# - one loading stage
# - length 8/8
# [_WAGON_LOADING_YEARSWITCH_LENGTH88](
# 1  - name,
# 2  - year_for_modern,
# 3  - climate,
# 4  - type,
# 5  - name_loaded,
# 6  - name_loading,
# 7  - file_loaded,
# 8  - file_loading,
# 9  - tmpl,
# 10 - x1,
# 11 - y1,
# 12 - x2,
# 13 - y2,
# 14 - type,
# 15 - name_loaded,
# 16 - name_loading,
# 17 - file_loaded,
# 18 - file_loading,
# 19 - tmpl,
# 20 - x1,
# 21 - y1,
# 22 - x2,
# 23 - y2)
#############################################################################################
define_unique([_WAGON_LOADING_YEARSWITCH_LENGTH88], [check_args_exact([$0], [$#], [23])dnl
_WAGON_LOADING_LENGTH88($1, $4, $3, $5, $6, $7, $8, $9, $10, $11, $12, $13)
_WAGON_LOADING_LENGTH88($1, $14, $3, $15, $16, $17, $18, $19, $20, $21, $22, $23)
switch(FEAT_TRAINS, SELF, _THIS_WAGON_ID([$1], [$3], [year_switch]), build_year < $2) {
    1: _THIS_WAGON_GRAPHICS_ID([$1], [$4], [$3]);
    _THIS_WAGON_GRAPHICS_ID([$1], [$14], [$3]);
}])

#############################################################################################
# Wagon with
# - two time periods
# - no loading stage
# - two cargo stages (empty + full)
# - length 8/8
# [_WAGON_2STAGES_NOLOADING_YEARSWITCH_LENGTH88](
# 1  - name,
# 2  - year_for_modern,
# 3  - climate,
# 4  - type,
# 5  - name_empty,
# 6  - name_full,
# 7  - file_empty,
# 8  - file_full,
# 9  - tmpl,
# 10 - x1,
# 11 - y1,
# 12 - x2,
# 13 - y2,
# 14 - type,
# 15 - name_empty,
# 16 - name_full,
# 17 - file_empty,
# 18 - file_full,
# 19 - tmpl,
# 20 - x1,
# 21 - y1,
# 22 - x2,
# 23 - y2)
#############################################################################################
define_unique([_WAGON_2STAGES_NOLOADING_YEARSWITCH_LENGTH88], [check_args_exact([$0], [$#], [23])dnl
_WAGON_2STAGES_NOLOADING_LENGTH88($1, $4, $3, $5, $6, $7, $8, $9, $10, $11, $12, $13)
_WAGON_2STAGES_NOLOADING_LENGTH88($1, $14, $3, $15, $16, $17, $18, $19, $20, $21, $22, $23)
switch(FEAT_TRAINS, SELF, _THIS_WAGON_ID([$1], [$3], [year_switch]), build_year < $2) {
    1: _THIS_WAGON_GRAPHICS_ID([$1], [$4], [$3]);
    _THIS_WAGON_GRAPHICS_ID([$1], [$14], [$3]);
}])


#############################################################################################
# Define a speed year switch
# _WAGON_SPEED_YEAR_SWITCH(
# 1  - name,
# 2  - climate
# 3  - year_for_modern,
# 4  - speed)
#############################################################################################
define_unique([_WAGON_SPEED_YEAR_SWITCH], [check_args_exact([$0], [$#], [4])dnl
/***************************************************************************
 * Switch wagon speed at specified year
 ***************************************************************************/
switch(FEAT_TRAINS, SELF, _THIS_WAGON_ID([$1], [$2], [speed_year_switch]), build_year < $3) {
    1: return $4;
    CB_FAILED;
}])

divert
